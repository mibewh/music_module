define(["ratchet/dynamic/empty","ui","ratchet/web","ratchet/dynamic/doclist","oneteam","handlebars"],function(t,n,e,r,i,o){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=3)}([function(t,n){t.exports=function(t){var n=[];return n.toString=function(){return this.map(function(n){var e=function(t,n){var e=t[1]||"",r=t[3];if(!r)return e;if(n&&"function"==typeof btoa){var i=function(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}(r),o=r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"});return[e].concat(o).concat([i]).join("\n")}return[e].join("\n")}(n,t);return n[2]?"@media "+n[2]+"{"+e+"}":e}).join("")},n.i=function(t,e){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<t.length;i++){var s=t[i];"number"==typeof s[0]&&r[s[0]]||(e&&!s[2]?s[2]=e:e&&(s[2]="("+s[2]+") and ("+e+")"),n.push(s))}},n}},function(n,e){n.exports=t},function(t,e){t.exports=n},function(t,n,e){t.exports=e(4)},function(t,n,e){var r;void 0===(r=function(t){e(5),e(8),e(13),e(16).registerHelper("each_group",function(t,n,e){var r,i="",o=[];if(n&&n.length>0){for(r=0;r<n.length;r++)r>0&&r%t==0&&(i+=e.fn(o),o=[]),o.push(n[r]);i+=e.fn(o)}return i})}.call(n,e,n,t))||(t.exports=r)},function(t,n,e){var r;void 0===(r=function(t,n,r){e(6);var i=e(7),o=e(1);return e(2).registerGadget("music-albums-list",o.extend({TEMPLATE:i,setup:function(){this.get("/projects/{projectId}/albums",this.index)},prepareModel:function(t,n,e){var r=this.observable("branch").get(),i=this.observable("project").get();this.base(t,n,function(){r.queryNodes({_type:"my:album"}).then(function(){n.albums=this.asArray();for(var t=0;t<n.albums.length;t++){var r=n.albums[t];r.imgUrl="/preview/repository/"+r.getRepositoryId()+"/branch/"+r.getBranchId()+"/node/"+r.getId()+"/default?size=128&name=preview128&force=true",r.artistUrl="/#/projects/"+i._doc+"/documents/"+r.artist.id,r.albumUrl="/#/projects/"+i._doc+"/documents/"+r._doc}e()})})}}))}.call(n,e,n,t))||(t.exports=r)},function(t,n,e){(t.exports=e(0)(!1)).push([t.i,"",""])},function(t,n){t.exports='<div>\n    {{#each_group 3 albums}}\n        <div class="row">\n            {{#each this}}\n                <div class="col-sm-4">\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <a href="{{albumUrl}}">\n                                <h3>{{title}}</h3>\n                            </a>\n                        </div>\n                        <div class="panel-body">\n                            <div class="media">\n                                <div class="media-left">\n                                    <img class="media-object" src="{{imgUrl}}" alt="{{title}}">\n                                </div>\n                                <div class="media-body">\n                                    <a href="{{artistUrl}}">\n                                        <h4>{{artist.title}}</h4>\n                                    </a>\n                                    {{{body}}}\n                                </div>\n                            </div>\n                        </div>\n                        <div class="panel-footer">\n                            Rating: {{rating}}\n                        </div>\n                    </div>\n                </div>\n            {{/each}}\n        </div>\n    {{/each_group}}\n</div>\n'},function(t,n,e){var r;void 0===(r=function(t,n,r){e(9);var i=e(10),o=e(11),s=e(12);return i.GadgetRegistry.register("music-albums-doclist",o.extend({configureDefault:function(){this.base(),this.config({observables:{query:"albums_query",sort:"albums_sort",sortDirection:"albums_sortDirection",searchTerm:"albums_searchTerm",selectedItems:"albums_selectedItems"}})},entityTypes:function(){return{plural:"albums",singular:"album"}},setup:function(){this.base(),this.get("/projects/{projectId}/albumslist",this.index)},doGitanaQuery:function(t,n,e,r,i,o){i.sort||(i.sort={title:1}),s.isEmptyOrNonExistent(r)&&e&&(r=s.searchQuery(e,["title"])),r._type="my:album",s.projectBranch(this,function(){this.queryNodes(r,i).then(function(){o(this)})})},linkUri:function(t){return this.observable("project").get(),s.linkUri(this,t)},iconUri:function(t){return s.iconUriForNode(t)},columnValue:function(t,n,e,r){var i=this.observable("project").get(),o=this.base(t,n);if("titleDescription"==n.key){var a=s.buildNodeSummary(t,!1,i),u=t.title;o=s.listTitleDescription(r,t,this.linkUri(t),u,!1,a)}return o}}))}.call(n,e,n,t))||(t.exports=r)},function(t,n,e){(t.exports=e(0)(!1)).push([t.i,"",""])},function(t,n){t.exports=e},function(t,n){t.exports=r},function(t,n){t.exports=i},function(t,n,e){var r;void 0===(r=function(t,n,r){e(14);var i=e(15),o=e(1);return e(2).registerGadget("music-artists-list",o.extend({TEMPLATE:i,setup:function(){this.get("/projects/{projectId}/artists",this.index)},prepareModel:function(t,n,e){var r=this.observable("branch").get(),i=this.observable("project").get();this.base(t,n,function(){r.queryNodes({_type:"my:artist"}).then(function(){var t=this.asArray();return t.forEach(function(t){t.url="/#/projects/"+i._doc+"/documents/"+t._doc}),t}).then(function(t){var n=this;return t.forEach(function(t){n.subchain(t).find({traverse:{associations:{"my:written_by":"INCOMING"},depth:1,types:["my:album"]}}).then(function(){t.albums=this.asArray(),t.albums.forEach(function(t){t.url="/#/projects/"+i._doc+"/documents/"+t._doc})})}),t}).then(function(t){n.artists=t,e()})})},doGitanaQuery:function(t,n,e,r,i,o){}}))}.call(n,e,n,t))||(t.exports=r)},function(t,n,e){(t.exports=e(0)(!1)).push([t.i,"",""])},function(t,n){t.exports='<div>\n    {{#artists}}\n        <div class="row">\n            <div class="col-sm-12">\n                <div class="panel panel-default">\n                    <div class="panel-heading">\n                        <a href="{{url}}">\n                            <h3>{{title}}</h3>\n                        </a>\n                    </div>\n                    <div class="panel-body">\n                        {{{bio}}}\n                        {{#albums}}\n                        <p><a href="{{url}}">{{title}}</a></p>\n                        {{/albums}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    {{/artists}}\n</div>\n'},function(t,n){t.exports=o}])});